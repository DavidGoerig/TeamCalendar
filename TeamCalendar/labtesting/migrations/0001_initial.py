# Generated by Django 2.2 on 2019-06-11 06:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Checks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_test_setup', models.BooleanField(default=False)),
                ('sample_prep_check', models.BooleanField(default=False)),
                ('project_approval', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment_goal', models.CharField(max_length=200)),
                ('experiment_desc', models.CharField(max_length=200)),
                ('experiment_focus', models.CharField(choices=[('All system', 'ALL SYSTEM'), ('Hardware', 'HARDWARE'), ('Software', 'SOFTWARE'), ('Reagents', 'REAGENTS'), ('Sensor', 'SENSOR')], default='All system', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='None', max_length=200)),
                ('version', models.CharField(default='1.0', max_length=200)),
                ('is_reference', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_nbr', models.IntegerField()),
                ('area', models.CharField(default='None', max_length=200)),
                ('test_plan', models.CharField(max_length=200)),
                ('responsable_name', models.CharField(max_length=200)),
                ('eln_number', models.IntegerField()),
                ('test_report', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed_reservation', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='LevelDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lvl_nbr', models.IntegerField(default=0)),
                ('measurement_nbr', models.IntegerField()),
                ('target_value', models.FloatField()),
                ('acceptance_criteria', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param', models.CharField(choices=[('pH', 'pH'), ('pCO2', 'p02'), ('Hct', 'Hct'), ('Na', 'Na'), ('K', 'K'), ('Ca++', 'Ca++'), ('Cl', 'Cl'), ('GLU', 'GLU'), ('LAC', 'LAC'), ('tHb', 'tHb'), ('SO2', 'SO2'), ('Bili', 'Bili'), ('Hb', 'Hb')], default='pH', max_length=200)),
                ('lvl_def', models.ManyToManyField(blank=True, to='labtesting.LevelDefinition')),
            ],
        ),
        migrations.CreateModel(
            name='ParametersNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('pH', 'pH'), ('pCO2', 'p02'), ('Hct', 'Hct'), ('Na', 'Na'), ('K', 'K'), ('Ca++', 'Ca++'), ('Cl', 'Cl'), ('GLU', 'GLU'), ('LAC', 'LAC'), ('tHb', 'tHb'), ('SO2', 'SO2'), ('Bili', 'Bili'), ('Hb', 'Hb')], default='pH', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SequenceDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.IntegerField(default=0)),
                ('param', models.CharField(max_length=50)),
                ('level', models.CharField(max_length=500)),
                ('pause_time', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Sequences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Sequence', max_length=200)),
                ('seq_def', models.ManyToManyField(blank=True, to='labtesting.SequenceDefinition')),
            ],
        ),
        migrations.CreateModel(
            name='TimelineDays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurment_comment', models.CharField(choices=[('None', 'NONE'), ('Ok', 'OK'), ('Nok', 'NOK')], default='None', max_length=200)),
                ('seq_nbr', models.IntegerField()),
                ('lvl_nbr', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Setup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_type', models.CharField(default='None', max_length=100)),
                ('sample_prep_method', models.CharField(default='None', max_length=200)),
                ('devices_names', models.ManyToManyField(blank=True, to='labtesting.DeviceNames')),
                ('levels', models.ManyToManyField(to='labtesting.Levels')),
                ('seq_def', models.ManyToManyField(to='labtesting.Sequences')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_template', models.BooleanField(default=False)),
                ('project_name', models.CharField(max_length=200, unique=True)),
                ('checks', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labtesting.Checks')),
                ('content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labtesting.Content')),
                ('information', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labtesting.Information')),
                ('instrument', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='labtesting.Instrument')),
                ('setup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='labtesting.Setup')),
                ('timeline', models.ManyToManyField(to='labtesting.TimelineDays')),
            ],
        ),
        migrations.AddField(
            model_name='instrument',
            name='instruments',
            field=models.ManyToManyField(to='labtesting.InstrumentDefinition'),
        ),
    ]
